name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      debug:
        description: 'Turn on verbose debug output'
        type: boolean
        default: false

concurrency: release-main

permissions:
  contents: write
  pull-requests: write
  id-token: write

env:
  NODE_ENV: production
  RENOUN_DEBUG: ${{ inputs.debug }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version: 20
          cache: pnpm
          registry-url: https://registry.npmjs.org

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Build
        env:
          TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
        run: pnpm build --filter=!@examples/*

      - name: Publish to npm
        id: publish
        uses: changesets/action@e0145edc7d9d8679003495b11f87bd8ef63c0cba
        with:
          publish: pnpm release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Fast-forward release branch
        if: steps.publish.outputs.published == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch origin main
          MAIN_SHA=$(git rev-parse origin/main)
          git push --force-with-lease \
            "https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git" \
            "$MAIN_SHA:refs/heads/release"

      - name: Notify Discord
        if: steps.publish.outputs.published == 'true'
        env:
          OWNER_REPO: ${{ github.repository }}
          PUBLISHED_PACKAGES: ${{ steps.publish.outputs.publishedPackages }}
          WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: node .github/scripts/notify-discord.mjs
